#!/usr/bin/env node

const dotenv = require('dotenv')
dotenv.load({ path: '.env' })

const app = require('../app')
app.set('port', process.env.PORT)

const http = require('http')
const socket = require('../routes/socket.js')
const socketioJwt = require('socketio-jwt')
const jwtSecret = process.env.SECRET

const log = require('../logger')

const server = http.createServer(app)
server.listen(process.env.PORT)
server.on('error', onError)
server.on('listening', onListening)

var io = require('socket.io')(server)
io.use(
  socketioJwt.authorize({
    secret: jwtSecret,
    handshake: true
  })
)

io.sockets.on('connection', socket)

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      log.error('Port ' + process.env.PORT + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      log.error('Port ' + process.env.PORT + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening() {
  log.info(
    process.env.APP_NAME +
      ' process started in ' +
      (process.env.PRODUCTION ? 'production' : 'development')
  )
}
